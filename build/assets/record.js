(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function() {
return webpackJsonp([1],{

/***/ 155:
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(156);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUtbW9kdWxlLmpzPzQxOGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyBUaGlzIG1ldGhvZCBvZiBvYnRhaW5pbmcgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QgbmVlZHMgdG8gYmVcbi8vIGtlcHQgaWRlbnRpY2FsIHRvIHRoZSB3YXkgaXQgaXMgb2J0YWluZWQgaW4gcnVudGltZS5qc1xudmFyIGcgPSAoZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuXG4vLyBVc2UgYGdldE93blByb3BlcnR5TmFtZXNgIGJlY2F1c2Ugbm90IGFsbCBicm93c2VycyBzdXBwb3J0IGNhbGxpbmdcbi8vIGBoYXNPd25Qcm9wZXJ0eWAgb24gdGhlIGdsb2JhbCBgc2VsZmAgb2JqZWN0IGluIGEgd29ya2VyLiBTZWUgIzE4My5cbnZhciBoYWRSdW50aW1lID0gZy5yZWdlbmVyYXRvclJ1bnRpbWUgJiZcbiAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZykuaW5kZXhPZihcInJlZ2VuZXJhdG9yUnVudGltZVwiKSA+PSAwO1xuXG4vLyBTYXZlIHRoZSBvbGQgcmVnZW5lcmF0b3JSdW50aW1lIGluIGNhc2UgaXQgbmVlZHMgdG8gYmUgcmVzdG9yZWQgbGF0ZXIuXG52YXIgb2xkUnVudGltZSA9IGhhZFJ1bnRpbWUgJiYgZy5yZWdlbmVyYXRvclJ1bnRpbWU7XG5cbi8vIEZvcmNlIHJlZXZhbHV0YXRpb24gb2YgcnVudGltZS5qcy5cbmcucmVnZW5lcmF0b3JSdW50aW1lID0gdW5kZWZpbmVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL3J1bnRpbWVcIik7XG5cbmlmIChoYWRSdW50aW1lKSB7XG4gIC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIHJ1bnRpbWUuXG4gIGcucmVnZW5lcmF0b3JSdW50aW1lID0gb2xkUnVudGltZTtcbn0gZWxzZSB7XG4gIC8vIFJlbW92ZSB0aGUgZ2xvYmFsIHByb3BlcnR5IGFkZGVkIGJ5IHJ1bnRpbWUuanMuXG4gIHRyeSB7XG4gICAgZGVsZXRlIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuICB9IGNhdGNoKGUpIHtcbiAgICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS1tb2R1bGUuanNcbi8vIG1vZHVsZSBpZCA9IDE1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///155\n");

/***/ }),

/***/ 156:
/***/ (function(module, exports) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///156\n");

/***/ }),

/***/ 18:
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(155);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/Njg4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n");

/***/ }),

/***/ 398:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(399);


/***/ }),

/***/ 399:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports,\"__esModule\",{value:true});exports.locatorBuilders=exports.record=undefined;var _regenerator=__webpack_require__(18);var _regenerator2=_interopRequireDefault(_regenerator);exports._isValidForm=_isValidForm;exports._recordFormAction=_recordFormAction;var _webextensionPolyfill=__webpack_require__(11);var _webextensionPolyfill2=_interopRequireDefault(_webextensionPolyfill);var _closurePolyfill=__webpack_require__(80);var _closurePolyfill2=_interopRequireDefault(_closurePolyfill);var _recordApi=__webpack_require__(400);var _promptRecorder=__webpack_require__(401);var _locatorBuilders=__webpack_require__(234);var _locatorBuilders2=_interopRequireDefault(_locatorBuilders);var _utils=__webpack_require__(41);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}/* eslint no-unused-vars: off, no-useless-escape: off */// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexports.record=_recordApi.record;var locatorBuilders=exports.locatorBuilders=new _locatorBuilders2.default(window);(0,_promptRecorder.attach)(_recordApi.record);function _isValidForm(tagName,target){return!!(tagName=='form'&&(target.hasAttribute('id')||target.hasAttribute('name'))&&!target.hasAttribute('onsubmit')&&(0,_utils.isFirefox)());}function _recordFormAction(target){if(target.hasAttribute('id'))(0,_recordApi.record)('submit',[['id='+target.id,'id']],'');else if(target.hasAttribute('name'))(0,_recordApi.record)('submit',[['name='+target.name,'name']],'');}_recordApi.Recorder.inputTypes=['text','password','file','datetime','datetime-local','date','month','time','week','number','range','email','url','search','tel','color'];_recordApi.Recorder.addEventHandler('type','change',function(event){// © Chen-Chieh Ping, SideeX Team\nif(event.target.tagName&&!this.recordingState.preventType&&this.recordingState.typeLock==0&&(this.recordingState.typeLock=1)){// END\nvar tagName=event.target.tagName.toLowerCase();var type=event.target.type;if('input'==tagName&&_recordApi.Recorder.inputTypes.indexOf(type)>=0){if(event.target.value.length>0){(0,_recordApi.record)('type',locatorBuilders.buildAll(event.target),event.target.value);// © Chen-Chieh Ping, SideeX Team\nif(this.recordingState.enterTarget!=null){var tempTarget=event.target.parentElement;var formChk=tempTarget.tagName.toLowerCase();while(formChk!='form'&&formChk!='body'){tempTarget=tempTarget.parentElement;formChk=tempTarget.tagName.toLowerCase();}if(_isValidForm(formChk,tempTarget)){_recordFormAction(tempTarget);}else(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(this.recordingState.enterTarget),'${KEY_ENTER}');this.recordingState.enterTarget=null;}// END\n}else{(0,_recordApi.record)('type',locatorBuilders.buildAll(event.target),event.target.value);}}else if('textarea'==tagName){(0,_recordApi.record)('type',locatorBuilders.buildAll(event.target),event.target.value);}}this.recordingState.typeLock=0;});_recordApi.Recorder.addEventHandler('type','input',function(event){this.recordingState.typeTarget=event.target;});function eventIsTrusted(event){return _utils.isTest?true:event.isTrusted;}// © Jie-Lin You, SideeX Team\n_recordApi.Recorder.addEventHandler('clickAt','click',function(event){var _this=this;if(event.button==0&&!this.recordingState.preventClick&&eventIsTrusted(event)){if(!this.recordingState.preventClickTwice){(0,_recordApi.record)('click',locatorBuilders.buildAll(event.target),'');this.recordingState.preventClickTwice=true;}setTimeout(function(){_this.recordingState.preventClickTwice=false;},30);}},true);// END\n// © Chen-Chieh Ping, SideeX Team\n_recordApi.Recorder.addEventHandler('doubleClickAt','dblclick',function(event){(0,_recordApi.record)('doubleClick',locatorBuilders.buildAll(event.target),'');},true);// END\n_recordApi.Recorder.addEventHandler('sendKeys','keydown',function(event){var _this2=this;if(event.target.tagName){var key=event.keyCode;var tagName=event.target.tagName.toLowerCase();var type=event.target.type;if(tagName=='input'&&_recordApi.Recorder.inputTypes.indexOf(type)>=0){if(key==13){this.recordingState.enterTarget=event.target;this.recordingState.enterValue=this.recordingState.enterTarget.value;var tempTarget=event.target.parentElement;var formChk=tempTarget.tagName.toLowerCase();if(this.recordingState.tempValue==this.recordingState.enterTarget.value&&this.recordingState.tabCheck==this.recordingState.enterTarget){(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(this.recordingState.enterTarget),'${KEY_ENTER}');this.recordingState.enterTarget=null;this.recordingState.preventType=true;}else if(this.recordingState.focusValue==this.recordingState.enterValue){while(formChk!='form'&&formChk!='body'){tempTarget=tempTarget.parentElement;formChk=tempTarget.tagName.toLowerCase();}if(_isValidForm(formChk,tempTarget)){_recordFormAction(tempTarget);}else(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(this.recordingState.enterTarget),'${KEY_ENTER}');this.recordingState.enterTarget=null;}if(this.recordingState.typeTarget&&this.recordingState.typeTarget.tagName&&!this.recordingState.preventType&&(this.recordingState.typeLock=1)){// END\ntagName=this.recordingState.typeTarget.tagName.toLowerCase();type=this.recordingState.typeTarget.type;if('input'==tagName&&_recordApi.Recorder.inputTypes.indexOf(type)>=0){if(this.recordingState.typeTarget.value.length>0){(0,_recordApi.record)('type',locatorBuilders.buildAll(this.recordingState.typeTarget),this.recordingState.typeTarget.value);// © Chen-Chieh Ping, SideeX Team\nif(this.recordingState.enterTarget!=null){tempTarget=this.recordingState.typeTarget.parentElement;formChk=tempTarget.tagName.toLowerCase();while(formChk!='form'&&formChk!='body'){tempTarget=tempTarget.parentElement;formChk=tempTarget.tagName.toLowerCase();}if(_isValidForm(formChk,tempTarget)){_recordFormAction(tempTarget);}else(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(this.recordingState.enterTarget),'${KEY_ENTER}');this.recordingState.enterTarget=null;}// END\n}else{(0,_recordApi.record)('type',locatorBuilders.buildAll(this.recordingState.typeTarget),this.recordingState.typeTarget.value);}}else if('textarea'==tagName){(0,_recordApi.record)('type',locatorBuilders.buildAll(this.recordingState.typeTarget),this.recordingState.typeTarget.value);}}this.recordingState.preventClick=true;setTimeout(function(){_this2.recordingState.preventClick=false;},500);setTimeout(function(){if(_this2.recordingState.enterValue!=event.target.value)_this2.recordingState.enterTarget=null;},50);}var tempbool=false;if((key==38||key==40)&&event.target.value!=''){if(this.recordingState.focusTarget!=null&&this.recordingState.focusTarget.value!=this.recordingState.tempValue){tempbool=true;this.recordingState.tempValue=this.recordingState.focusTarget.value;}if(tempbool){(0,_recordApi.record)('type',locatorBuilders.buildAll(event.target),this.recordingState.tempValue);}setTimeout(function(){_this2.recordingState.tempValue=_this2.recordingState.focusTarget.value;},250);if(key==38)(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(event.target),'${KEY_UP}');else(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(event.target),'${KEY_DOWN}');this.recordingState.tabCheck=event.target;}if(key==9){if(this.recordingState.tabCheck==event.target){(0,_recordApi.record)('sendKeys',locatorBuilders.buildAll(event.target),'${KEY_TAB}');this.recordingState.preventType=true;}}}}},true);// END\nvar mousedown=void 0,mouseup=void 0,selectMouseup=void 0,selectMousedown=void 0,mouseoverQ=void 0,clickLocator=void 0;// © Shuo-Heng Shih, SideeX Team\n_recordApi.Recorder.addEventHandler('dragAndDrop','mousedown',function(event){if(event.clientX<window.document.documentElement.clientWidth&&event.clientY<window.document.documentElement.clientHeight){mousedown=event;mouseup=setTimeout(function(){mousedown=undefined;},200);selectMouseup=setTimeout(function(){selectMousedown=event;},200);}mouseoverQ=[];if(event.target.nodeName){var tagName=event.target.nodeName.toLowerCase();if('option'==tagName){var parent=event.target.parentNode;if(parent.multiple){var options=parent.options;for(var i=0;i<options.length;i++){options[i]._wasSelected=options[i].selected;}}}}},true);// END\n// © Shuo-Heng Shih, SideeX Team\n_recordApi.Recorder.addEventHandler('dragAndDrop','mouseup',function(event){function getSelectionText(){var text='';var activeEl=window.document.activeElement;var activeElTagName=activeEl?activeEl.tagName.toLowerCase():null;if(activeElTagName=='textarea'||activeElTagName=='input'){text=activeEl.value.slice(activeEl.selectionStart,activeEl.selectionEnd);}else if(window.getSelection){text=window.getSelection().toString();}return text.trim();}clearTimeout(selectMouseup);if(selectMousedown){var x=event.clientX-selectMousedown.clientX;var y=event.clientY-selectMousedown.clientY;if(selectMousedown&&event.button===0&&x+y&&event.clientX<window.document.documentElement.clientWidth&&event.clientY<window.document.documentElement.clientHeight&&getSelectionText()===''){var sourceRelateX=selectMousedown.pageX-selectMousedown.target.getBoundingClientRect().left-window.scrollX;var sourceRelateY=selectMousedown.pageY-selectMousedown.target.getBoundingClientRect().top-window.scrollY;var targetRelateX=void 0,targetRelateY=void 0;if(!!mouseoverQ.length&&mouseoverQ[1].relatedTarget==mouseoverQ[0].target&&mouseoverQ[0].target==event.target){targetRelateX=event.pageX-mouseoverQ[1].target.getBoundingClientRect().left-window.scrollX;targetRelateY=event.pageY-mouseoverQ[1].target.getBoundingClientRect().top-window.scrollY;(0,_recordApi.record)('mouseDownAt',locatorBuilders.buildAll(selectMousedown.target),sourceRelateX+','+sourceRelateY);(0,_recordApi.record)('mouseMoveAt',locatorBuilders.buildAll(mouseoverQ[1].target),targetRelateX+','+targetRelateY);(0,_recordApi.record)('mouseUpAt',locatorBuilders.buildAll(mouseoverQ[1].target),targetRelateX+','+targetRelateY);}else{targetRelateX=event.pageX-event.target.getBoundingClientRect().left-window.scrollX;targetRelateY=event.pageY-event.target.getBoundingClientRect().top-window.scrollY;(0,_recordApi.record)('mouseDownAt',locatorBuilders.buildAll(event.target),targetRelateX+','+targetRelateY);(0,_recordApi.record)('mouseMoveAt',locatorBuilders.buildAll(event.target),targetRelateX+','+targetRelateY);(0,_recordApi.record)('mouseUpAt',locatorBuilders.buildAll(event.target),targetRelateX+','+targetRelateY);}}}else{clickLocator=undefined;mouseup=undefined;var _x=event.clientX-mousedown.clientX;var _y=event.clientY-mousedown.clientY;if(mousedown&&mousedown.target!==event.target&&!(_x+_y)){(0,_recordApi.record)('mouseDown',locatorBuilders.buildAll(mousedown.target),'');(0,_recordApi.record)('mouseUp',locatorBuilders.buildAll(event.target),'');}else if(mousedown&&mousedown.target===event.target){var target=locatorBuilders.buildAll(mousedown.target);// setTimeout(function() {\n//     if (!self.clickLocator)\n//         record(\"click\", target, '');\n// }.bind(this), 100);\n}}mousedown=undefined;selectMousedown=undefined;mouseoverQ=undefined;},true);// END\nvar dropLocator=void 0,dragstartLocator=void 0;// © Shuo-Heng Shih, SideeX Team\n_recordApi.Recorder.addEventHandler('dragAndDropToObject','dragstart',function(event){dropLocator=setTimeout(function(){dragstartLocator=event;},200);},true);// END\n// © Shuo-Heng Shih, SideeX Team\n_recordApi.Recorder.addEventHandler('dragAndDropToObject','drop',function(event){clearTimeout(dropLocator);if(dragstartLocator&&event.button==0&&dragstartLocator.target!==event.target){//value no option\n(0,_recordApi.record)('dragAndDropToObject',locatorBuilders.buildAll(dragstartLocator.target),locatorBuilders.build(event.target));}dragstartLocator=undefined;selectMousedown=undefined;},true);// END\n// © Shuo-Heng Shih, SideeX Team\nvar prevTimeOut=null,scrollDetector=void 0;_recordApi.Recorder.addEventHandler('runScript','scroll',function(event){if(pageLoaded===true){scrollDetector=event.target;clearTimeout(prevTimeOut);prevTimeOut=setTimeout(function(){scrollDetector=undefined;},500);}},true);// END\n// © Shuo-Heng Shih, SideeX Team\nvar nowNode=0,mouseoverLocator=void 0,nodeInsertedLocator=void 0,nodeAttrChange=void 0,nodeAttrChangeTimeout=void 0;_recordApi.Recorder.addEventHandler('mouseOver','mouseover',function(event){if(window.document.documentElement)nowNode=window.document.documentElement.getElementsByTagName('*').length;if(pageLoaded===true){var clickable=findClickableElement(event.target);if(clickable){nodeInsertedLocator=event.target;setTimeout(function(){nodeInsertedLocator=undefined;},500);nodeAttrChange=locatorBuilders.buildAll(event.target);nodeAttrChangeTimeout=setTimeout(function(){nodeAttrChange=undefined;},10);}//drop target overlapping\nif(mouseoverQ){//mouse keep down\nif(mouseoverQ.length>=3)mouseoverQ.shift();mouseoverQ.push(event);}}},true);// END\nvar mouseoutLocator=undefined;// © Shuo-Heng Shih, SideeX Team\n_recordApi.Recorder.addEventHandler('mouseOut','mouseout',function(event){if(mouseoutLocator!==null&&event.target===mouseoutLocator){(0,_recordApi.record)('mouseOut',locatorBuilders.buildAll(event.target),'');}mouseoutLocator=undefined;},true);// END\n_recordApi.Recorder.addMutationObserver('FrameDeleted',function(mutations){var _this3=this;mutations.forEach(function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(mutation){var removedNodes;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return mutation.removedNodes;case 2:removedNodes=_context.sent;if(removedNodes.length&&removedNodes[0].nodeName==='IFRAME'&&removedNodes[0].id!=='selenium-ide-indicator'){_webextensionPolyfill2.default.runtime.sendMessage({frameRemoved:true}).catch(function(){});}case 4:case'end':return _context.stop();}}},_callee,_this3);}));return function(_x2){return _ref.apply(this,arguments);};}());},{childList:true});_recordApi.Recorder.addMutationObserver('DOMNodeInserted',function(mutations){if(pageLoaded===true&&window.document.documentElement.getElementsByTagName('*').length>nowNode){// Get list of inserted nodes from the mutations list to simulate 'DOMNodeInserted'.\nvar insertedNodes=mutations.reduce(function(nodes,mutation){if(mutation.type==='childList'){nodes.push.apply(nodes,mutation.addedNodes);}return nodes;},[]);// If no nodes inserted, just bail.\nif(!insertedNodes.length){return;}if(scrollDetector){//TODO: fix target\n(0,_recordApi.record)('runScript',[['window.scrollTo(0,'+window.scrollY+')']],'');pageLoaded=false;setTimeout(function(){pageLoaded=true;},550);scrollDetector=undefined;nodeInsertedLocator=undefined;}if(nodeInsertedLocator){(0,_recordApi.record)('mouseOver',locatorBuilders.buildAll(nodeInsertedLocator),'');mouseoutLocator=nodeInsertedLocator;nodeInsertedLocator=undefined;mouseoverLocator=undefined;}}},{childList:true,subtree:true});// © Shuo-Heng Shih, SideeX Team\nvar readyTimeOut=null;var pageLoaded=true;_recordApi.Recorder.addEventHandler('checkPageLoaded','readystatechange',function(event){if(window.document.readyState==='loading'){pageLoaded=false;}else{pageLoaded=false;clearTimeout(readyTimeOut);readyTimeOut=setTimeout(function(){pageLoaded=true;},1500);//setReady after complete 1.5s\n}},true);// END\n// © Ming-Hung Hsu, SideeX Team\n_recordApi.Recorder.addEventHandler('contextMenu','contextmenu',function(event){var myPort=_webextensionPolyfill2.default.runtime.connect();var tmpText=locatorBuilders.buildAll(event.target);var tmpVal=_closurePolyfill.bot.dom.getVisibleText(event.target);var tmpTitle=_closurePolyfill2.default.string.normalizeSpaces(event.target.ownerDocument.title);myPort.onMessage.addListener(function(m){if(m.cmd.includes('Text')){(0,_recordApi.record)(m.cmd,tmpText,tmpVal);}else if(m.cmd.includes('Title')){(0,_recordApi.record)(m.cmd,[[tmpTitle]],'');}else if(m.cmd.includes('Value')){(0,_recordApi.record)(m.cmd,tmpText,event.target.value);}else if(m.cmd==='mouseOver'){(0,_recordApi.record)('mouseOver',locatorBuilders.buildAll(event.target),'');}myPort.onMessage.removeListener(this);});},true);// END\n// © Yun-Wen Lin, SideeX Team\nvar getEle=void 0;var checkFocus=0;var contentTest=void 0;_recordApi.Recorder.addEventHandler('editContent','focus',function(event){var editable=event.target.contentEditable;if(editable=='true'){getEle=event.target;contentTest=getEle.innerHTML;checkFocus=1;}},true);// END\n// © Yun-Wen Lin, SideeX Team\n_recordApi.Recorder.addEventHandler('editContent','blur',function(event){if(checkFocus==1){if(event.target==getEle){if(getEle.innerHTML!=contentTest){(0,_recordApi.record)('editContent',locatorBuilders.buildAll(event.target),getEle.innerHTML);}checkFocus=0;}}},true);// END\n_webextensionPolyfill2.default.runtime.sendMessage({attachRecorderRequest:true}).catch(function(reason){// Failed silently if receiveing end does not exist\n});// Copyright 2005 Shinya Kasatani\n_recordApi.Recorder.prototype.getOptionLocator=function(option){var label=option.text.replace(/^ *(.*?) *$/,'$1');if(label.match(/\\xA0/)){// if the text contains &nbsp;\nreturn'label=regexp:'+label.replace(/[\\(\\)\\[\\]\\\\\\^\\$\\*\\+\\?\\.\\|\\{\\}]/g,function(str){// eslint-disable-line no-useless-escape\nreturn'\\\\'+str;}).replace(/\\s+/g,function(str){if(str.match(/\\xA0/)){if(str.length>1){return'\\\\s+';}else{return'\\\\s';}}else{return str;}});}else{return'label='+label;}};function findClickableElement(e){if(!e.tagName)return null;var tagName=e.tagName.toLowerCase();var type=e.type;if(e.hasAttribute('onclick')||e.hasAttribute('href')||tagName=='button'||tagName=='input'&&(type=='submit'||type=='button'||type=='image'||type=='radio'||type=='checkbox'||type=='reset')){return e;}else{if(e.parentNode!=null){return findClickableElement(e.parentNode);}else{return null;}}}//select / addSelect / removeSelect\n_recordApi.Recorder.addEventHandler('select','focus',function(event){if(event.target.nodeName){var tagName=event.target.nodeName.toLowerCase();if('select'==tagName&&event.target.multiple){var options=event.target.options;for(var i=0;i<options.length;i++){if(options[i]._wasSelected==null){// is the focus was gained by mousedown event, _wasSelected would be already set\noptions[i]._wasSelected=options[i].selected;}}}}},true);_recordApi.Recorder.addEventHandler('select','change',function(event){if(event.target.tagName){var tagName=event.target.tagName.toLowerCase();if('select'==tagName){if(!event.target.multiple){var option=event.target.options[event.target.selectedIndex];(0,_recordApi.record)('select',locatorBuilders.buildAll(event.target),getOptionLocator(option));}else{var options=event.target.options;for(var i=0;i<options.length;i++){if(options[i]._wasSelected!=options[i].selected){var value=getOptionLocator(options[i]);if(options[i].selected){(0,_recordApi.record)('addSelection',locatorBuilders.buildAll(event.target),value);}else{(0,_recordApi.record)('removeSelection',locatorBuilders.buildAll(event.target),value);}options[i]._wasSelected=options[i].selected;}}}}}});function getOptionLocator(option){var label=option.text.replace(/^ *(.*?) *$/,'$1');if(label.match(/\\xA0/)){// if the text contains &nbsp;\nreturn'label=regexp:'+label.replace(/[(\\)\\[\\]\\\\\\^\\$\\*\\+\\?\\.\\|\\{\\}]/g,function(str){// eslint-disable-line no-useless-escape\nreturn'\\\\'+str;}).replace(/\\s+/g,function(str){if(str.match(/\\xA0/)){if(str.length>1){return'\\\\s+';}else{return'\\\\s';}}else{return str;}});}else{return'label='+label;}}_webextensionPolyfill2.default.runtime.sendMessage({attachRecorderRequest:true}).then(function(shouldAttach){if(shouldAttach){_recordApi.recorder.attach();}}).catch(function(){});;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return;}__REACT_HOT_LOADER__.register(locatorBuilders,'locatorBuilders','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(_isValidForm,'_isValidForm','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(_recordFormAction,'_recordFormAction','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(eventIsTrusted,'eventIsTrusted','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(mousedown,'mousedown','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(mouseup,'mouseup','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(selectMouseup,'selectMouseup','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(selectMousedown,'selectMousedown','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(mouseoverQ,'mouseoverQ','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(clickLocator,'clickLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(dropLocator,'dropLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(dragstartLocator,'dragstartLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(prevTimeOut,'prevTimeOut','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(scrollDetector,'scrollDetector','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(nowNode,'nowNode','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(mouseoverLocator,'mouseoverLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(nodeInsertedLocator,'nodeInsertedLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(nodeAttrChange,'nodeAttrChange','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(nodeAttrChangeTimeout,'nodeAttrChangeTimeout','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(mouseoutLocator,'mouseoutLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(readyTimeOut,'readyTimeOut','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(pageLoaded,'pageLoaded','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(getEle,'getEle','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(checkFocus,'checkFocus','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(contentTest,'contentTest','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(findClickableElement,'findClickableElement','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');__REACT_HOT_LOADER__.register(getOptionLocator,'getOptionLocator','/opt/selenium-ide/packages/selenium-ide/src/content/record.js');}();;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///399\n");

/***/ }),

/***/ 400:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports,\"__esModule\",{value:true});exports.recorder=exports.Recorder=undefined;var _regenerator=__webpack_require__(18);var _regenerator2=_interopRequireDefault(_regenerator);// set frame id\nvar getFrameLocation=function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var currentWindow,currentParentWindow,recordingIndicatorIndex,frameCount,idx,frame;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentWindow=window;currentParentWindow=void 0;recordingIndicatorIndex=void 0;frameCount=void 0;case 4:if(!(currentWindow!==window.top)){_context.next=25;break;}currentParentWindow=currentWindow.parent;if(currentParentWindow.frames.length){_context.next=8;break;}return _context.abrupt('break',25);case 8:if(!(currentParentWindow===window.top)){_context.next=13;break;}_context.next=11;return getFrameCount().catch(function(){});case 11:frameCount=_context.sent;if(frameCount)recordingIndicatorIndex=frameCount.indicatorIndex;case 13:idx=0;case 14:if(!(idx<currentParentWindow.frames.length)){_context.next=23;break;}frame=currentParentWindow.frames[idx];if(!(frame===currentWindow)){_context.next=20;break;}frameLocation=':'+(0,_utils.calculateFrameIndex)({indicatorIndex:recordingIndicatorIndex,targetFrameIndex:idx})+frameLocation;currentWindow=currentParentWindow;return _context.abrupt('break',23);case 20:idx++;_context.next=14;break;case 23:_context.next=4;break;case 25:frameLocation='root'+frameLocation;_context.next=28;return _webextensionPolyfill2.default.runtime.sendMessage({frameLocation:frameLocation}).catch(function(){});case 28:case'end':return _context.stop();}}},_callee,this);}));return function getFrameLocation(){return _ref.apply(this,arguments);};}();exports.record=record;var _webextensionPolyfill=__webpack_require__(11);var _webextensionPolyfill2=_interopRequireDefault(_webextensionPolyfill);var _utils=__webpack_require__(111);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}/*\n * Copyright 2017 SideeX committers\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */var contentSideexTabId=-1;var frameLocation='';var recordingIndicator=void 0;function Recorder(window){this.window=window;this.eventListeners={};this.attached=false;this.recordingState={};}Recorder.eventHandlers={};Recorder.mutationObservers={};Recorder.addEventHandler=function(handlerName,eventName,handler,options){handler.handlerName=handlerName;if(!options)options=false;var key=options?'C_'+eventName:eventName;if(!this.eventHandlers[key]){this.eventHandlers[key]=[];}this.eventHandlers[key].push(handler);};Recorder.addMutationObserver=function(observerName,callback,config){var observer=new MutationObserver(callback);observer.observerName=observerName;observer.config=config;this.mutationObservers[observerName]=observer;};Recorder.prototype.parseEventKey=function(eventKey){if(eventKey.match(/^C_/)){return{eventName:eventKey.substring(2),capture:true};}else{return{eventName:eventKey,capture:false};}};function updateInputElementsOfRelevantType(action){var inp=window.document.getElementsByTagName('input');for(var i=0;i<inp.length;i++){if(Recorder.inputTypes.indexOf(inp[i].type)>=0){action(inp[i]);}}}function focusEvent(recordingState,event){recordingState.focusTarget=event.target;recordingState.focusValue=recordingState.focusTarget.value;recordingState.tempValue=recordingState.focusValue;recordingState.preventType=false;}function blurEvent(recordingState){recordingState.focusTarget=null;recordingState.focusValue=null;recordingState.tempValue=null;}function attachInputListeners(recordingState){updateInputElementsOfRelevantType(function(input){input.addEventListener('focus',focusEvent.bind(null,recordingState));input.addEventListener('blur',blurEvent.bind(null,recordingState));});}function detachInputListeners(recordingState){updateInputElementsOfRelevantType(function(input){input.removeEventListener('focus',focusEvent.bind(null,recordingState));input.removeEventListener('blur',blurEvent.bind(null,recordingState));});}Recorder.prototype.attach=function(){if(!this.attached){for(var eventKey in Recorder.eventHandlers){var eventInfo=this.parseEventKey(eventKey);var eventName=eventInfo.eventName;var capture=eventInfo.capture;var handlers=Recorder.eventHandlers[eventKey];this.eventListeners[eventKey]=[];for(var i=0;i<handlers.length;i++){this.window.document.addEventListener(eventName,handlers[i].bind(this),capture);this.eventListeners[eventKey].push(handlers[i]);}}for(var observerName in Recorder.mutationObservers){var observer=Recorder.mutationObservers[observerName];observer.observe(this.window.document.body,observer.config);}this.attached=true;this.recordingState={typeTarget:undefined,typeLock:0,focusTarget:null,focusValue:null,tempValue:null,preventType:false,preventClickTwice:false,preventClick:false,enterTarget:null,enterValue:null,tabCheck:null};attachInputListeners(this.recordingState);addRecordingIndicator();}};Recorder.prototype.detach=function(){for(var eventKey in this.eventListeners){var eventInfo=this.parseEventKey(eventKey);var eventName=eventInfo.eventName;var capture=eventInfo.capture;for(var i=0;i<this.eventListeners[eventKey].length;i++){this.window.document.removeEventListener(eventName,this.eventListeners[eventKey][i],capture);}}for(var observerName in Recorder.mutationObservers){var observer=Recorder.mutationObservers[observerName];observer.disconnect();}this.eventListeners={};this.attached=false;removeRecordingIndicator();detachInputListeners(this.recordingState);};function attachRecorderHandler(message,_sender,sendResponse){if(message.attachRecorder){recorder.attach();sendResponse(true);}}function detachRecorderHandler(message,_sender,sendResponse){if(message.detachRecorder){recorder.detach();sendResponse(true);}}var recorder=new Recorder(window);// recorder event handlers\n_webextensionPolyfill2.default.runtime.onMessage.addListener(attachRecorderHandler);_webextensionPolyfill2.default.runtime.onMessage.addListener(detachRecorderHandler);function addRecordingIndicator(){if(frameLocation==='root'&&!recordingIndicator){var indicatorIndex=window.parent.frames.length;recordingIndicator=window.document.createElement('iframe');recordingIndicator.src=_webextensionPolyfill2.default.runtime.getURL('/indicator.html');recordingIndicator.id='selenium-ide-indicator';recordingIndicator.style.border='1px solid white';recordingIndicator.style.position='fixed';recordingIndicator.style.bottom='36px';recordingIndicator.style.right='36px';recordingIndicator.style.width='280px';recordingIndicator.style.height='50px';recordingIndicator.style['background-color']='whitesmoke';recordingIndicator.style['box-shadow']='7px 7px 10px 0 rgba(0,0,0,0.3)';recordingIndicator.style.transition='bottom 100ms linear';recordingIndicator.style['z-index']=1000000000000000;recordingIndicator.addEventListener('mouseenter',function(event){event.target.style.visibility='hidden';setTimeout(function(){event.target.style.visibility='visible';},1000);},false);window.document.body.appendChild(recordingIndicator);_webextensionPolyfill2.default.runtime.onMessage.addListener(function(message,sender,// eslint-disable-line\nsendResponse){if(message.recordNotification){recordingIndicator.contentWindow.postMessage({direction:'from-recording-module',command:message.command,target:message.target,value:message.value},'*');sendResponse(true);}});return _webextensionPolyfill2.default.runtime.sendMessage({setFrameNumberForTab:true,indicatorIndex:indicatorIndex}).catch(function(){});}}function getFrameCount(){return _webextensionPolyfill2.default.runtime.sendMessage({requestFrameCount:true});}function removeRecordingIndicator(){if(frameLocation==='root'&&recordingIndicator){recordingIndicator.parentElement.removeChild(recordingIndicator);recordingIndicator=undefined;}}function recalculateFrameLocation(message,_sender,sendResponse){var _this=this;if(message.recalculateFrameLocation){;_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:removeRecordingIndicator();setTimeout(_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return addRecordingIndicator();case 2:case'end':return _context2.stop();}}},_callee2,_this);})),100);frameLocation='';_context3.next=5;return getFrameLocation();case 5:sendResponse(true);case 6:case'end':return _context3.stop();}}},_callee3,_this);}))();return true;}}_webextensionPolyfill2.default.runtime.onMessage.addListener(recalculateFrameLocation)// runs in the content script of each frame\n// e.g., once on load\n;_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee4(){return _regenerator2.default.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return getFrameLocation();case 2:case'end':return _context4.stop();}}},_callee4,undefined);}))();window.recorder=recorder;window.contentSideexTabId=contentSideexTabId;window.Recorder=Recorder;/* record */function record(command,target,value,insertBeforeLastCommand,actualFrameLocation){_webextensionPolyfill2.default.runtime.sendMessage({command:command,target:target,value:value,insertBeforeLastCommand:insertBeforeLastCommand,frameLocation:actualFrameLocation!=undefined?actualFrameLocation:frameLocation,commandSideexTabId:contentSideexTabId}).catch(function(){recorder.detach();});}window.record=record;exports.Recorder=Recorder;exports.recorder=recorder;;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return;}__REACT_HOT_LOADER__.register(contentSideexTabId,'contentSideexTabId','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(frameLocation,'frameLocation','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(recordingIndicator,'recordingIndicator','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(Recorder,'Recorder','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(updateInputElementsOfRelevantType,'updateInputElementsOfRelevantType','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(focusEvent,'focusEvent','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(blurEvent,'blurEvent','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(attachInputListeners,'attachInputListeners','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(detachInputListeners,'detachInputListeners','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(attachRecorderHandler,'attachRecorderHandler','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(detachRecorderHandler,'detachRecorderHandler','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(recorder,'recorder','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(addRecordingIndicator,'addRecordingIndicator','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(getFrameCount,'getFrameCount','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(removeRecordingIndicator,'removeRecordingIndicator','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(getFrameLocation,'getFrameLocation','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(recalculateFrameLocation,'recalculateFrameLocation','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');__REACT_HOT_LOADER__.register(record,'record','/opt/selenium-ide/packages/selenium-ide/src/content/record-api.js');}();;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///400\n");

/***/ }),

/***/ 401:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports,\"__esModule\",{value:true});exports.attach=attach;// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nfunction attach(record){if(window===window.top){window.addEventListener('message',function(event){if(event.source.top==window&&event.data&&event.data.direction=='from-page-script'){if(event.data.recordedType){switch(event.data.recordedType){case'prompt':if(event.data.recordedResult!=null){record('answerOnNextPrompt',[[event.data.recordedResult]],'',true,event.data.frameLocation);}else{record('chooseCancelOnNextPrompt',[['']],'',true,event.data.frameLocation);}record('assertPrompt',[[event.data.recordedMessage]],'',false,event.data.frameLocation);if(event.data.recordedResult!=null){record('webdriverAnswerOnVisiblePrompt',[[event.data.recordedResult]],'',false,event.data.frameLocation);}else{record('webdriverChooseCancelOnVisiblePrompt',[['']],'',false,event.data.frameLocation);}break;case'confirm':if(event.data.recordedResult==true){record('chooseOkOnNextConfirmation',[['']],'',true,event.data.frameLocation);}else{record('chooseCancelOnNextConfirmation',[['']],'',true,event.data.frameLocation);}record('assertConfirmation',[[event.data.recordedMessage]],'',false,event.data.frameLocation);if(event.data.recordedResult==true){record('webdriverChooseOkOnVisibleConfirmation',[['']],'',false,event.data.frameLocation);}else{record('webdriverChooseCancelOnVisibleConfirmation',[['']],'',false,event.data.frameLocation);}break;case'alert'://record(\"answerOnNextAlert\",[[event.data.recordedResult]],\"\",true);\nrecord('assertAlert',[[event.data.recordedMessage]],'',false,event.data.frameLocation);break;}}}});}};var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return;}__REACT_HOT_LOADER__.register(attach,'attach','/opt/selenium-ide/packages/selenium-ide/src/content/prompt-recorder.js');}();;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29udGVudC9wcm9tcHQtcmVjb3JkZXIuanM/OWM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTtleHBvcnRzLmF0dGFjaD1hdHRhY2g7Ly8gTGljZW5zZWQgdG8gdGhlIFNvZnR3YXJlIEZyZWVkb20gQ29uc2VydmFuY3kgKFNGQykgdW5kZXIgb25lXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbi8vIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBTRkMgbGljZW5zZXMgdGhpcyBmaWxlXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4vLyBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbi8vIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4vLyBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cbmZ1bmN0aW9uIGF0dGFjaChyZWNvcmQpe2lmKHdpbmRvdz09PXdpbmRvdy50b3Ape3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJyxmdW5jdGlvbihldmVudCl7aWYoZXZlbnQuc291cmNlLnRvcD09d2luZG93JiZldmVudC5kYXRhJiZldmVudC5kYXRhLmRpcmVjdGlvbj09J2Zyb20tcGFnZS1zY3JpcHQnKXtpZihldmVudC5kYXRhLnJlY29yZGVkVHlwZSl7c3dpdGNoKGV2ZW50LmRhdGEucmVjb3JkZWRUeXBlKXtjYXNlJ3Byb21wdCc6aWYoZXZlbnQuZGF0YS5yZWNvcmRlZFJlc3VsdCE9bnVsbCl7cmVjb3JkKCdhbnN3ZXJPbk5leHRQcm9tcHQnLFtbZXZlbnQuZGF0YS5yZWNvcmRlZFJlc3VsdF1dLCcnLHRydWUsZXZlbnQuZGF0YS5mcmFtZUxvY2F0aW9uKTt9ZWxzZXtyZWNvcmQoJ2Nob29zZUNhbmNlbE9uTmV4dFByb21wdCcsW1snJ11dLCcnLHRydWUsZXZlbnQuZGF0YS5mcmFtZUxvY2F0aW9uKTt9cmVjb3JkKCdhc3NlcnRQcm9tcHQnLFtbZXZlbnQuZGF0YS5yZWNvcmRlZE1lc3NhZ2VdXSwnJyxmYWxzZSxldmVudC5kYXRhLmZyYW1lTG9jYXRpb24pO2lmKGV2ZW50LmRhdGEucmVjb3JkZWRSZXN1bHQhPW51bGwpe3JlY29yZCgnd2ViZHJpdmVyQW5zd2VyT25WaXNpYmxlUHJvbXB0JyxbW2V2ZW50LmRhdGEucmVjb3JkZWRSZXN1bHRdXSwnJyxmYWxzZSxldmVudC5kYXRhLmZyYW1lTG9jYXRpb24pO31lbHNle3JlY29yZCgnd2ViZHJpdmVyQ2hvb3NlQ2FuY2VsT25WaXNpYmxlUHJvbXB0JyxbWycnXV0sJycsZmFsc2UsZXZlbnQuZGF0YS5mcmFtZUxvY2F0aW9uKTt9YnJlYWs7Y2FzZSdjb25maXJtJzppZihldmVudC5kYXRhLnJlY29yZGVkUmVzdWx0PT10cnVlKXtyZWNvcmQoJ2Nob29zZU9rT25OZXh0Q29uZmlybWF0aW9uJyxbWycnXV0sJycsdHJ1ZSxldmVudC5kYXRhLmZyYW1lTG9jYXRpb24pO31lbHNle3JlY29yZCgnY2hvb3NlQ2FuY2VsT25OZXh0Q29uZmlybWF0aW9uJyxbWycnXV0sJycsdHJ1ZSxldmVudC5kYXRhLmZyYW1lTG9jYXRpb24pO31yZWNvcmQoJ2Fzc2VydENvbmZpcm1hdGlvbicsW1tldmVudC5kYXRhLnJlY29yZGVkTWVzc2FnZV1dLCcnLGZhbHNlLGV2ZW50LmRhdGEuZnJhbWVMb2NhdGlvbik7aWYoZXZlbnQuZGF0YS5yZWNvcmRlZFJlc3VsdD09dHJ1ZSl7cmVjb3JkKCd3ZWJkcml2ZXJDaG9vc2VPa09uVmlzaWJsZUNvbmZpcm1hdGlvbicsW1snJ11dLCcnLGZhbHNlLGV2ZW50LmRhdGEuZnJhbWVMb2NhdGlvbik7fWVsc2V7cmVjb3JkKCd3ZWJkcml2ZXJDaG9vc2VDYW5jZWxPblZpc2libGVDb25maXJtYXRpb24nLFtbJyddXSwnJyxmYWxzZSxldmVudC5kYXRhLmZyYW1lTG9jYXRpb24pO31icmVhaztjYXNlJ2FsZXJ0JzovL3JlY29yZChcImFuc3dlck9uTmV4dEFsZXJ0XCIsW1tldmVudC5kYXRhLnJlY29yZGVkUmVzdWx0XV0sXCJcIix0cnVlKTtcbnJlY29yZCgnYXNzZXJ0QWxlcnQnLFtbZXZlbnQuZGF0YS5yZWNvcmRlZE1lc3NhZ2VdXSwnJyxmYWxzZSxldmVudC5kYXRhLmZyYW1lTG9jYXRpb24pO2JyZWFrO319fX0pO319O3ZhciBfdGVtcD1mdW5jdGlvbigpe2lmKHR5cGVvZiBfX1JFQUNUX0hPVF9MT0FERVJfXz09PSd1bmRlZmluZWQnKXtyZXR1cm47fV9fUkVBQ1RfSE9UX0xPQURFUl9fLnJlZ2lzdGVyKGF0dGFjaCwnYXR0YWNoJywnL29wdC9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2VsZW5pdW0taWRlL3NyYy9jb250ZW50L3Byb21wdC1yZWNvcmRlci5qcycpO30oKTs7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jb250ZW50L3Byb21wdC1yZWNvcmRlci5qc1xuLy8gbW9kdWxlIGlkID0gNDAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///401\n");

/***/ }),

/***/ 41:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports,\"__esModule\",{value:true});exports.userAgent=exports.isTest=exports.isStaging=exports.isProduction=undefined;exports.isChrome=isChrome;exports.isFirefox=isFirefox;var _uaParserJs=__webpack_require__(82);var _uaParserJs2=_interopRequireDefault(_uaParserJs);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var isProduction=exports.isProduction=undefined==='production';var isStaging=exports.isStaging=undefined==='staging';var isTest=exports.isTest=undefined==='test';var userAgent=exports.userAgent=(0,_uaParserJs2.default)(window.navigator.userAgent);function isChrome(){userAgent.browser.name==='Chrome';}function isFirefox(){userAgent.browser.name==='Firefox';};var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return;}__REACT_HOT_LOADER__.register(isProduction,'isProduction','/opt/selenium-ide/packages/selenium-ide/src/common/utils.js');__REACT_HOT_LOADER__.register(isStaging,'isStaging','/opt/selenium-ide/packages/selenium-ide/src/common/utils.js');__REACT_HOT_LOADER__.register(isTest,'isTest','/opt/selenium-ide/packages/selenium-ide/src/common/utils.js');__REACT_HOT_LOADER__.register(userAgent,'userAgent','/opt/selenium-ide/packages/selenium-ide/src/common/utils.js');__REACT_HOT_LOADER__.register(isChrome,'isChrome','/opt/selenium-ide/packages/selenium-ide/src/common/utils.js');__REACT_HOT_LOADER__.register(isFirefox,'isFirefox','/opt/selenium-ide/packages/selenium-ide/src/common/utils.js');}();;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21tb24vdXRpbHMuanM/MWU5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOnRydWV9KTtleHBvcnRzLnVzZXJBZ2VudD1leHBvcnRzLmlzVGVzdD1leHBvcnRzLmlzU3RhZ2luZz1leHBvcnRzLmlzUHJvZHVjdGlvbj11bmRlZmluZWQ7ZXhwb3J0cy5pc0Nocm9tZT1pc0Nocm9tZTtleHBvcnRzLmlzRmlyZWZveD1pc0ZpcmVmb3g7dmFyIF91YVBhcnNlckpzPXJlcXVpcmUoJ3VhLXBhcnNlci1qcycpO3ZhciBfdWFQYXJzZXJKczI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdWFQYXJzZXJKcyk7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9O312YXIgaXNQcm9kdWN0aW9uPWV4cG9ydHMuaXNQcm9kdWN0aW9uPXByb2Nlc3MuZW52Lk5PREVfRU5WPT09J3Byb2R1Y3Rpb24nO3ZhciBpc1N0YWdpbmc9ZXhwb3J0cy5pc1N0YWdpbmc9cHJvY2Vzcy5lbnYuTk9ERV9FTlY9PT0nc3RhZ2luZyc7dmFyIGlzVGVzdD1leHBvcnRzLmlzVGVzdD1wcm9jZXNzLmVudi5OT0RFX0VOVj09PSd0ZXN0Jzt2YXIgdXNlckFnZW50PWV4cG9ydHMudXNlckFnZW50PSgwLF91YVBhcnNlckpzMi5kZWZhdWx0KSh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7ZnVuY3Rpb24gaXNDaHJvbWUoKXt1c2VyQWdlbnQuYnJvd3Nlci5uYW1lPT09J0Nocm9tZSc7fWZ1bmN0aW9uIGlzRmlyZWZveCgpe3VzZXJBZ2VudC5icm93c2VyLm5hbWU9PT0nRmlyZWZveCc7fTt2YXIgX3RlbXA9ZnVuY3Rpb24oKXtpZih0eXBlb2YgX19SRUFDVF9IT1RfTE9BREVSX189PT0ndW5kZWZpbmVkJyl7cmV0dXJuO31fX1JFQUNUX0hPVF9MT0FERVJfXy5yZWdpc3Rlcihpc1Byb2R1Y3Rpb24sJ2lzUHJvZHVjdGlvbicsJy9vcHQvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NlbGVuaXVtLWlkZS9zcmMvY29tbW9uL3V0aWxzLmpzJyk7X19SRUFDVF9IT1RfTE9BREVSX18ucmVnaXN0ZXIoaXNTdGFnaW5nLCdpc1N0YWdpbmcnLCcvb3B0L3NlbGVuaXVtLWlkZS9wYWNrYWdlcy9zZWxlbml1bS1pZGUvc3JjL2NvbW1vbi91dGlscy5qcycpO19fUkVBQ1RfSE9UX0xPQURFUl9fLnJlZ2lzdGVyKGlzVGVzdCwnaXNUZXN0JywnL29wdC9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2VsZW5pdW0taWRlL3NyYy9jb21tb24vdXRpbHMuanMnKTtfX1JFQUNUX0hPVF9MT0FERVJfXy5yZWdpc3Rlcih1c2VyQWdlbnQsJ3VzZXJBZ2VudCcsJy9vcHQvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NlbGVuaXVtLWlkZS9zcmMvY29tbW9uL3V0aWxzLmpzJyk7X19SRUFDVF9IT1RfTE9BREVSX18ucmVnaXN0ZXIoaXNDaHJvbWUsJ2lzQ2hyb21lJywnL29wdC9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2VsZW5pdW0taWRlL3NyYy9jb21tb24vdXRpbHMuanMnKTtfX1JFQUNUX0hPVF9MT0FERVJfXy5yZWdpc3Rlcihpc0ZpcmVmb3gsJ2lzRmlyZWZveCcsJy9vcHQvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NlbGVuaXVtLWlkZS9zcmMvY29tbW9uL3V0aWxzLmpzJyk7fSgpOztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbW1vbi91dGlscy5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41\n");

/***/ }),

/***/ 82:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * UAParser.js v0.7.18\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright © 2012-2016 Faisal Salman <fyzlman@gmail.com>\n * Dual licensed under GPLv2 or MIT\n */\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '0.7.18',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major', // deprecated\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded';\n\n\n    ///////////\n    // Helper\n    //////////\n\n\n    var util = {\n        extend : function (regexes, extensions) {\n            var margedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    margedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    margedRegexes[i] = regexes[i];\n                }\n            }\n            return margedRegexes;\n        },\n        has : function (str1, str2) {\n          if (typeof str1 === \"string\") {\n            return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;\n          } else {\n            return false;\n          }\n        },\n        lowerize : function (str) {\n            return str.toLowerCase();\n        },\n        major : function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g,'').split(\".\")[0] : undefined;\n        },\n        trim : function (str) {\n          return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        }\n    };\n\n\n    ///////////////\n    // Map helper\n    //////////////\n\n\n    var mapper = {\n\n        rgx : function (ua, arrays) {\n\n            //var result = {},\n            var i = 0, j, k, p, q, matches, match;//, args = arguments;\n\n            /*// construct object barebones\n            for (p = 0; p < args[1].length; p++) {\n                q = args[1][p];\n                result[typeof q === OBJ_TYPE ? q[0] : q] = undefined;\n            }*/\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length == 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length == 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length == 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n            // console.log(this);\n            //return this;\n        },\n\n        str : function (str, map) {\n\n            for (var i in map) {\n                // check if array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (util.has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (util.has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n        }\n    };\n\n\n    ///////////////\n    // String map\n    //////////////\n\n\n    var maps = {\n\n        browser : {\n            oldsafari : {\n                version : {\n                    '1.0'   : '/8',\n                    '1.2'   : '/1',\n                    '1.3'   : '/3',\n                    '2.0'   : '/412',\n                    '2.0.2' : '/416',\n                    '2.0.3' : '/417',\n                    '2.0.4' : '/419',\n                    '?'     : '/'\n                }\n            }\n        },\n\n        device : {\n            amazon : {\n                model : {\n                    'Fire Phone' : ['SD', 'KF']\n                }\n            },\n            sprint : {\n                model : {\n                    'Evo Shift 4G' : '7373KT'\n                },\n                vendor : {\n                    'HTC'       : 'APA',\n                    'Sprint'    : 'Sprint'\n                }\n            }\n        },\n\n        os : {\n            windows : {\n                version : {\n                    'ME'        : '4.90',\n                    'NT 3.11'   : 'NT3.51',\n                    'NT 4.0'    : 'NT4.0',\n                    '2000'      : 'NT 5.0',\n                    'XP'        : ['NT 5.1', 'NT 5.2'],\n                    'Vista'     : 'NT 6.0',\n                    '7'         : 'NT 6.1',\n                    '8'         : 'NT 6.2',\n                    '8.1'       : 'NT 6.3',\n                    '10'        : ['NT 6.4', 'NT 10.0'],\n                    'RT'        : 'ARM'\n                }\n            }\n        }\n    };\n\n\n    //////////////\n    // Regex map\n    /////////////\n\n\n    var regexes = {\n\n        browser : [[\n\n            // Presto based\n            /(opera\\smini)\\/([\\w\\.-]+)/i,                                       // Opera Mini\n            /(opera\\s[mobiletab]+).+version\\/([\\w\\.-]+)/i,                      // Opera Mobi/Tablet\n            /(opera).+version\\/([\\w\\.]+)/i,                                     // Opera > 9.80\n            /(opera)[\\/\\s]+([\\w\\.]+)/i                                          // Opera < 9.80\n            ], [NAME, VERSION], [\n\n            /(opios)[\\/\\s]+([\\w\\.]+)/i                                          // Opera mini on iphone >= 8.0\n            ], [[NAME, 'Opera Mini'], VERSION], [\n\n            /\\s(opr)\\/([\\w\\.]+)/i                                               // Opera Webkit\n            ], [[NAME, 'Opera'], VERSION], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i,\n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n\n            // Trident based\n            /(avant\\s|iemobile|slim|baidu)(?:browser)?[\\/\\s]?([\\w\\.]*)/i,\n                                                                                // Avant/IEMobile/SlimBrowser/Baidu\n            /(?:ms|\\()(ie)\\s([\\w\\.]+)/i,                                        // Internet Explorer\n\n            // Webkit/KHTML based\n            /(rekonq)\\/([\\w\\.]*)/i,                                             // Rekonq\n            /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark)\\/([\\w\\.-]+)/i\n                                                                                // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser\n            ], [NAME, VERSION], [\n\n            /(trident).+rv[:\\s]([\\w\\.]+).+like\\sgecko/i                         // IE11\n            ], [[NAME, 'IE'], VERSION], [\n\n            /(edge|edgios|edgea)\\/((\\d+)?[\\w\\.]+)/i                             // Microsoft Edge\n            ], [[NAME, 'Edge'], VERSION], [\n\n            /(yabrowser)\\/([\\w\\.]+)/i                                           // Yandex\n            ], [[NAME, 'Yandex'], VERSION], [\n\n            /(puffin)\\/([\\w\\.]+)/i                                              // Puffin\n            ], [[NAME, 'Puffin'], VERSION], [\n\n            /((?:[\\s\\/])uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i\n                                                                                // UCBrowser\n            ], [[NAME, 'UCBrowser'], VERSION], [\n\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n\n            /(micromessenger)\\/([\\w\\.]+)/i                                      // WeChat\n            ], [[NAME, 'WeChat'], VERSION], [\n\n            /(qqbrowserlite)\\/([\\w\\.]+)/i                                       // QQBrowserLite\n            ], [NAME, VERSION], [\n\n            /(QQ)\\/([\\d\\.]+)/i                                                  // QQ, aka ShouQ\n            ], [NAME, VERSION], [\n\n            /m?(qqbrowser)[\\/\\s]?([\\w\\.]+)/i                                    // QQBrowser\n            ], [NAME, VERSION], [\n\n            /(BIDUBrowser)[\\/\\s]?([\\w\\.]+)/i                                    // Baidu Browser\n            ], [NAME, VERSION], [\n\n            /(2345Explorer)[\\/\\s]?([\\w\\.]+)/i                                   // 2345 Browser\n            ], [NAME, VERSION], [\n\n            /(MetaSr)[\\/\\s]?([\\w\\.]+)/i                                         // SouGouBrowser\n            ], [NAME], [\n\n            /(LBBROWSER)/i                                      // LieBao Browser\n            ], [NAME], [\n\n            /xiaomi\\/miuibrowser\\/([\\w\\.]+)/i                                   // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI Browser']], [\n\n            /;fbav\\/([\\w\\.]+);/i                                                // Facebook App for iOS & Android\n            ], [VERSION, [NAME, 'Facebook']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)|\\s)/i                                 // Chrome Headless\n            ], [VERSION, [NAME, 'Chrome Headless']], [\n\n            /\\swv\\).+(chrome)\\/([\\w\\.]+)/i                                      // Chrome WebView\n            ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [\n\n            /((?:oculus|samsung)browser)\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+(?:g|us))(.+)/, '$1 $2'], VERSION], [                // Oculus / Samsung Browser\n\n            /android.+version\\/([\\w\\.]+)\\s+(?:mobile\\s?safari|safari)*/i        // Android Browser\n            ], [VERSION, [NAME, 'Android Browser']], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i\n                                                                                // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /(dolfin)\\/([\\w\\.]+)/i                                              // Dolphin\n            ], [[NAME, 'Dolphin'], VERSION], [\n\n            /((?:android.+)crmo|crios)\\/([\\w\\.]+)/i                             // Chrome for Android/iOS\n            ], [[NAME, 'Chrome'], VERSION], [\n\n            /(coast)\\/([\\w\\.]+)/i                                               // Opera Coast\n            ], [[NAME, 'Opera Coast'], VERSION], [\n\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, 'Firefox']], [\n\n            /version\\/([\\w\\.]+).+?mobile\\/\\w+\\s(safari)/i                       // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n\n            /version\\/([\\w\\.]+).+?(mobile\\s?safari|safari)/i                    // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n\n            /webkit.+?(gsa)\\/([\\w\\.]+).+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i  // Google Search Appliance on iOS\n            ], [[NAME, 'GSA'], VERSION], [\n\n            /webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i                     // Safari < 3.0\n            ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [\n\n            /(konqueror)\\/([\\w\\.]+)/i,                                          // Konqueror\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape)\\/([\\w\\.-]+)/i                                 // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i,\n\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(mozilla)\\/([\\w\\.]+).+rv\\:.+gecko\\/\\d+/i,                          // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir\n            /(links)\\s\\(([\\w\\.]+)/i,                                            // Links\n            /(gobrowser)\\/?([\\w\\.]*)/i,                                         // GoBrowser\n            /(ice\\s?browser)\\/v?([\\w\\._]+)/i,                                   // ICE Browser\n            /(mosaic)[\\/\\s]([\\w\\.]+)/i                                          // Mosaic\n            ], [NAME, VERSION]\n\n            /* /////////////////////\n            // Media players BEGIN\n            ////////////////////////\n\n            , [\n\n            /(apple(?:coremedia|))\\/((\\d+)[\\w\\._]+)/i,                          // Generic Apple CoreMedia\n            /(coremedia) v((\\d+)[\\w\\._]+)/i\n            ], [NAME, VERSION], [\n\n            /(aqualung|lyssna|bsplayer)\\/((\\d+)?[\\w\\.-]+)/i                     // Aqualung/Lyssna/BSPlayer\n            ], [NAME, VERSION], [\n\n            /(ares|ossproxy)\\s((\\d+)[\\w\\.-]+)/i                                 // Ares/OSSProxy\n            ], [NAME, VERSION], [\n\n            /(audacious|audimusicstream|amarok|bass|core|dalvik|gnomemplayer|music on console|nsplayer|psp-internetradioplayer|videos)\\/((\\d+)[\\w\\.-]+)/i,\n                                                                                // Audacious/AudiMusicStream/Amarok/BASS/OpenCORE/Dalvik/GnomeMplayer/MoC\n                                                                                // NSPlayer/PSP-InternetRadioPlayer/Videos\n            /(clementine|music player daemon)\\s((\\d+)[\\w\\.-]+)/i,               // Clementine/MPD\n            /(lg player|nexplayer)\\s((\\d+)[\\d\\.]+)/i,\n            /player\\/(nexplayer|lg player)\\s((\\d+)[\\w\\.-]+)/i                   // NexPlayer/LG Player\n            ], [NAME, VERSION], [\n            /(nexplayer)\\s((\\d+)[\\w\\.-]+)/i                                     // Nexplayer\n            ], [NAME, VERSION], [\n\n            /(flrp)\\/((\\d+)[\\w\\.-]+)/i                                          // Flip Player\n            ], [[NAME, 'Flip Player'], VERSION], [\n\n            /(fstream|nativehost|queryseekspider|ia-archiver|facebookexternalhit)/i\n                                                                                // FStream/NativeHost/QuerySeekSpider/IA Archiver/facebookexternalhit\n            ], [NAME], [\n\n            /(gstreamer) souphttpsrc (?:\\([^\\)]+\\)){0,1} libsoup\\/((\\d+)[\\w\\.-]+)/i\n                                                                                // Gstreamer\n            ], [NAME, VERSION], [\n\n            /(htc streaming player)\\s[\\w_]+\\s\\/\\s((\\d+)[\\d\\.]+)/i,              // HTC Streaming Player\n            /(java|python-urllib|python-requests|wget|libcurl)\\/((\\d+)[\\w\\.-_]+)/i,\n                                                                                // Java/urllib/requests/wget/cURL\n            /(lavf)((\\d+)[\\d\\.]+)/i                                             // Lavf (FFMPEG)\n            ], [NAME, VERSION], [\n\n            /(htc_one_s)\\/((\\d+)[\\d\\.]+)/i                                      // HTC One S\n            ], [[NAME, /_/g, ' '], VERSION], [\n\n            /(mplayer)(?:\\s|\\/)(?:(?:sherpya-){0,1}svn)(?:-|\\s)(r\\d+(?:-\\d+[\\w\\.-]+){0,1})/i\n                                                                                // MPlayer SVN\n            ], [NAME, VERSION], [\n\n            /(mplayer)(?:\\s|\\/|[unkow-]+)((\\d+)[\\w\\.-]+)/i                      // MPlayer\n            ], [NAME, VERSION], [\n\n            /(mplayer)/i,                                                       // MPlayer (no other info)\n            /(yourmuze)/i,                                                      // YourMuze\n            /(media player classic|nero showtime)/i                             // Media Player Classic/Nero ShowTime\n            ], [NAME], [\n\n            /(nero (?:home|scout))\\/((\\d+)[\\w\\.-]+)/i                           // Nero Home/Nero Scout\n            ], [NAME, VERSION], [\n\n            /(nokia\\d+)\\/((\\d+)[\\w\\.-]+)/i                                      // Nokia\n            ], [NAME, VERSION], [\n\n            /\\s(songbird)\\/((\\d+)[\\w\\.-]+)/i                                    // Songbird/Philips-Songbird\n            ], [NAME, VERSION], [\n\n            /(winamp)3 version ((\\d+)[\\w\\.-]+)/i,                               // Winamp\n            /(winamp)\\s((\\d+)[\\w\\.-]+)/i,\n            /(winamp)mpeg\\/((\\d+)[\\w\\.-]+)/i\n            ], [NAME, VERSION], [\n\n            /(ocms-bot|tapinradio|tunein radio|unknown|winamp|inlight radio)/i  // OCMS-bot/tap in radio/tunein/unknown/winamp (no other info)\n                                                                                // inlight radio\n            ], [NAME], [\n\n            /(quicktime|rma|radioapp|radioclientapplication|soundtap|totem|stagefright|streamium)\\/((\\d+)[\\w\\.-]+)/i\n                                                                                // QuickTime/RealMedia/RadioApp/RadioClientApplication/\n                                                                                // SoundTap/Totem/Stagefright/Streamium\n            ], [NAME, VERSION], [\n\n            /(smp)((\\d+)[\\d\\.]+)/i                                              // SMP\n            ], [NAME, VERSION], [\n\n            /(vlc) media player - version ((\\d+)[\\w\\.]+)/i,                     // VLC Videolan\n            /(vlc)\\/((\\d+)[\\w\\.-]+)/i,\n            /(xbmc|gvfs|xine|xmms|irapp)\\/((\\d+)[\\w\\.-]+)/i,                    // XBMC/gvfs/Xine/XMMS/irapp\n            /(foobar2000)\\/((\\d+)[\\d\\.]+)/i,                                    // Foobar2000\n            /(itunes)\\/((\\d+)[\\d\\.]+)/i                                         // iTunes\n            ], [NAME, VERSION], [\n\n            /(wmplayer)\\/((\\d+)[\\w\\.-]+)/i,                                     // Windows Media Player\n            /(windows-media-player)\\/((\\d+)[\\w\\.-]+)/i\n            ], [[NAME, /-/g, ' '], VERSION], [\n\n            /windows\\/((\\d+)[\\w\\.-]+) upnp\\/[\\d\\.]+ dlnadoc\\/[\\d\\.]+ (home media server)/i\n                                                                                // Windows Media Server\n            ], [VERSION, [NAME, 'Windows']], [\n\n            /(com\\.riseupradioalarm)\\/((\\d+)[\\d\\.]*)/i                          // RiseUP Radio Alarm\n            ], [NAME, VERSION], [\n\n            /(rad.io)\\s((\\d+)[\\d\\.]+)/i,                                        // Rad.io\n            /(radio.(?:de|at|fr))\\s((\\d+)[\\d\\.]+)/i\n            ], [[NAME, 'rad.io'], VERSION]\n\n            //////////////////////\n            // Media players END\n            ////////////////////*/\n\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i                     // AMD64\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, util.lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows\\s(ce|mobile);\\sppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i                           // PowerPC\n            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|arm(?:64|(?=v\\d+;))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, util.lowerize]]\n        ],\n\n        device : [[\n\n            /\\((ipad|playbook);[\\w\\s\\);-]+(rim|apple)/i                         // iPad/PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/                                  // iPad\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [\n\n            /(apple\\s{0,1}tv)/i                                                 // Apple TV\n            ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple']], [\n\n            /(archos)\\s(gamepad2?)/i,                                           // Archos\n            /(hp).+(touchpad)/i,                                                // HP TouchPad\n            /(hp).+(tablet)/i,                                                  // HP Tablet\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /\\s(nook)[\\w\\s]+build\\/(\\w+)/i,                                     // Nook\n            /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i                                  // Dell Streak\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(kf[A-z]+)\\sbuild\\/.+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n            /(sd|kf)[0349hijorstuw]+\\sbuild\\/.+silk\\//i                         // Fire Phone\n            ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [\n\n            /\\((ip[honed|\\s\\w*]+);.+(apple)/i                                   // iPod/iPhone\n            ], [MODEL, VENDOR, [TYPE, MOBILE]], [\n            /\\((ip[honed|\\s\\w*]+);/i                                            // iPod/iPhone\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [\n\n            /(blackberry)[\\s-]?(\\w+)/i,                                         // BlackBerry\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i,\n                                                                                // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp)\\s([\\w\\s]+\\w)/i,                                               // HP iPAQ\n            /(asus)-?(\\w+)/i                                                    // Asus\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /\\(bb10;\\s(\\w+)/i                                                   // BlackBerry 10\n            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [\n                                                                                // Asus Tablets\n            /android.+(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus 7|padfone)/i\n            ], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [\n\n            /(sony)\\s(tablet\\s[ps])\\sbuild\\//i,                                  // Sony\n            /(sony)?(?:sgp.+)\\sbuild\\//i\n            ], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [\n            /android.+\\s([c-g]\\d{4}|so[-l]\\w+)\\sbuild\\//i\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n\n            /\\s(ouya)\\s/i,                                                      // Ouya\n            /(nintendo)\\s([wids3u]+)/i                                          // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n\n            /android.+;\\s(shield)\\sbuild/i                                      // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n\n            /(playstation\\s[34portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [\n\n            /(sprint\\s(\\w+))/i                                                  // Sprint Phones\n            ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\n\n            /(lenovo)\\s?(S(?:5000|6000)+(?:[-][\\w+]))/i                         // Lenovo tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(htc)[;_\\s-]+([\\w\\s]+(?=\\))|\\w+)*/i,                               // HTC\n            /(zte)-(\\w*)/i,                                                     // ZTE\n            /(alcatel|geeksphone|lenovo|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i\n                                                                                // Alcatel/GeeksPhone/Lenovo/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            /(nexus\\s9)/i                                                       // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n\n            /d\\/huawei([\\w\\s-]+)[;\\)]/i,\n            /(nexus\\s6p)/i                                                      // Huawei\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [\n\n            /(microsoft);\\s(lumia[\\s\\w]+)/i                                     // Microsoft Lumia\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /[\\s\\(;](xbox(?:\\sone)?)[\\s\\);]/i                                   // Microsoft Xbox\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [\n\n                                                                                // Motorola\n            /\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)[\\w\\s]+build\\//i,\n            /mot[\\s-]?(\\w*)/i,\n            /(XT\\d{3,4}) build\\//i,\n            /(nexus\\s6)/i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [\n            /android.+\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [\n\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i            // HbbTV devices\n            ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [\n\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [\n\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n\n            /android.+((sch-i[89]0\\d|shw-m380s|gt-p\\d{4}|gt-n\\d+|sgh-t8[56]9|nexus 10))/i,\n            /((SM-T\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [                  // Samsung\n            /smart-tv.+(samsung)/i\n            ], [VENDOR, [TYPE, SMARTTV], MODEL], [\n            /((s[cgp]h-\\w+|gt-\\w+|galaxy\\snexus|sm-\\w[\\w\\d]+))/i,\n            /(sam[sung]*)[\\s-]*(\\w+-?[\\w-]*)/i,\n            /sec-((sgh\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [\n\n            /sie-(\\w*)/i                                                        // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n\n            /(maemo|nokia).*(n900|lumia\\s\\d+)/i,                                // Nokia\n            /(nokia)[\\s_-]?([\\w-]*)/i\n            ], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [\n\n            /android\\s3\\.[\\s\\w;-]{10}(a\\d{3})/i                                 // Acer\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            /android.+([vl]k\\-?\\d{3})\\s+build/i                                 // LG Tablet\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [\n            /android\\s3\\.[\\s\\w;-]{10}(lg?)-([06cv9]{3,4})/i                     // LG Tablet\n            ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [\n            /(lg) netcast\\.tv/i                                                 // LG SmartTV\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /(nexus\\s[45])/i,                                                   // LG\n            /lg[e;\\s\\/-]+(\\w*)/i,\n            /android.+lg(\\-?[\\d\\w]+)\\s+build/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [\n\n            /android.+(ideatab[a-z0-9\\-\\s]+)/i                                  // Lenovo\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            /linux;.+((jolla));/i                                               // Jolla\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /((pebble))app\\/[\\d\\.]+\\s/i                                         // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n\n            /android.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i                            // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, 'Chromecast'], [VENDOR, 'Google']], [\n\n            /android.+;\\s(glass)\\s\\d/i                                          // Google Glass\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [\n\n            /android.+;\\s(pixel c)\\s/i                                          // Google Pixel C\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [\n\n            /android.+;\\s(pixel xl|pixel)\\s/i                                   // Google Pixel\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\n\n            /android.+;\\s(\\w+)\\s+build\\/hm\\1/i,                                 // Xiaomi Hongmi 'numeric' models\n            /android.+(hm[\\s\\-_]*note?[\\s_]*(?:\\d\\w)?)\\s+build/i,               // Xiaomi Hongmi\n            /android.+(mi[\\s\\-_]*(?:one|one[\\s_]plus|note lte)?[\\s_]*(?:\\d?\\w?)[\\s_]*(?:plus)?)\\s+build/i,    // Xiaomi Mi\n            /android.+(redmi[\\s\\-_]*(?:note)?(?:[\\s_]*[\\w\\s]+))\\s+build/i       // Redmi Phones\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\n            /android.+(mi[\\s\\-_]*(?:pad)(?:[\\s_]*[\\w\\s]+))\\s+build/i            // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\n            /android.+;\\s(m[1-5]\\snote)\\sbuild/i                                // Meizu Tablet\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, TABLET]], [\n\n            /android.+a000(1)\\s+build/i,                                        // OnePlus\n            /android.+oneplus\\s(a\\d{4})\\s+build/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(RCT[\\d\\w]+)\\s+build/i                            // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n\n            /android.+[;\\/\\s]+(Venue[\\d\\s]{2,7})\\s+build/i                      // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Q[T|M][\\d\\w]+)\\s+build/i                         // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s+(Barnes[&\\s]+Noble\\s+|BN[RT])(V?.*)\\s+build/i     // Barnes & Noble Tablet\n            ], [[VENDOR, 'Barnes & Noble'], MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s+(TM\\d{3}.*\\b)\\s+build/i                           // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n\n            /android.+;\\s(k88)\\sbuild/i                                         // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(gen\\d{3})\\s+build.*49h/i                         // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(zur\\d{3})\\s+build/i                              // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*((Zeki)?TB.*\\b)\\s+build/i                         // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n\n            /(android).+[;\\/]\\s+([YR]\\d{2})\\s+build/i,\n            /android.+[;\\/]\\s+(Dragon[\\-\\s]+Touch\\s+|DT)(\\w{5})\\sbuild/i        // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(NS-?\\w{0,9})\\sbuild/i                            // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*((NX|Next)-?\\w{0,9})\\s+build/i                    // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Xtreme\\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\\s+build/i\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [                    // Voice Xtreme Phones\n\n            /android.+[;\\/]\\s*(LVTEL\\-)?(V1[12])\\s+build/i                     // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(V(100MD|700NA|7011|917G).*\\b)\\s+build/i          // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Le[\\s\\-]+Pan)[\\s\\-]+(\\w{1,9})\\s+build/i          // Le Pan Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Trio[\\s\\-]*.*)\\s+build/i                         // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Trinity)[\\-\\s]*(T\\d{3})\\s+build/i                // Trinity Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*TU_(1491)\\s+build/i                               // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n\n            /android.+(KS(.+))\\s+build/i                                        // Amazon Kindle Tablets\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n\n            /android.+(Gigaset)[\\s\\-]+(Q\\w{1,9})\\s+build/i                      // Gigaset Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /\\s(tablet|tab)[;\\/]/i,                                             // Unidentifiable Tablet\n            /\\s(mobile)(?:[;\\/]|\\ssafari)/i                                     // Unidentifiable Mobile\n            ], [[TYPE, util.lowerize], VENDOR, MODEL], [\n\n            /(android[\\w\\.\\s\\-]{0,9});.+build/i                                 // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n\n\n        /*//////////////////////////\n            // TODO: move to string map\n            ////////////////////////////\n\n            /(C6603)/i                                                          // Sony Xperia Z C6603\n            ], [[MODEL, 'Xperia Z C6603'], [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n            /(C6903)/i                                                          // Sony Xperia Z 1\n            ], [[MODEL, 'Xperia Z 1'], [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n\n            /(SM-G900[F|H])/i                                                   // Samsung Galaxy S5\n            ], [[MODEL, 'Galaxy S5'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n            /(SM-G7102)/i                                                       // Samsung Galaxy Grand 2\n            ], [[MODEL, 'Galaxy Grand 2'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n            /(SM-G530H)/i                                                       // Samsung Galaxy Grand Prime\n            ], [[MODEL, 'Galaxy Grand Prime'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n            /(SM-G313HZ)/i                                                      // Samsung Galaxy V\n            ], [[MODEL, 'Galaxy V'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n            /(SM-T805)/i                                                        // Samsung Galaxy Tab S 10.5\n            ], [[MODEL, 'Galaxy Tab S 10.5'], [VENDOR, 'Samsung'], [TYPE, TABLET]], [\n            /(SM-G800F)/i                                                       // Samsung Galaxy S5 Mini\n            ], [[MODEL, 'Galaxy S5 Mini'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n            /(SM-T311)/i                                                        // Samsung Galaxy Tab 3 8.0\n            ], [[MODEL, 'Galaxy Tab 3 8.0'], [VENDOR, 'Samsung'], [TYPE, TABLET]], [\n\n            /(T3C)/i                                                            // Advan Vandroid T3C\n            ], [MODEL, [VENDOR, 'Advan'], [TYPE, TABLET]], [\n            /(ADVAN T1J\\+)/i                                                    // Advan Vandroid T1J+\n            ], [[MODEL, 'Vandroid T1J+'], [VENDOR, 'Advan'], [TYPE, TABLET]], [\n            /(ADVAN S4A)/i                                                      // Advan Vandroid S4A\n            ], [[MODEL, 'Vandroid S4A'], [VENDOR, 'Advan'], [TYPE, MOBILE]], [\n\n            /(V972M)/i                                                          // ZTE V972M\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n\n            /(i-mobile)\\s(IQ\\s[\\d\\.]+)/i                                        // i-mobile IQ\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(IQ6.3)/i                                                          // i-mobile IQ IQ 6.3\n            ], [[MODEL, 'IQ 6.3'], [VENDOR, 'i-mobile'], [TYPE, MOBILE]], [\n            /(i-mobile)\\s(i-style\\s[\\d\\.]+)/i                                   // i-mobile i-STYLE\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(i-STYLE2.1)/i                                                     // i-mobile i-STYLE 2.1\n            ], [[MODEL, 'i-STYLE 2.1'], [VENDOR, 'i-mobile'], [TYPE, MOBILE]], [\n\n            /(mobiistar touch LAI 512)/i                                        // mobiistar touch LAI 512\n            ], [[MODEL, 'Touch LAI 512'], [VENDOR, 'mobiistar'], [TYPE, MOBILE]], [\n\n            /////////////\n            // END TODO\n            ///////////*/\n\n        ],\n\n        engine : [[\n\n            /windows.+\\sedge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, 'EdgeHTML']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\\/([\\w\\.]+)/i,     // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m\n            /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,                          // KHTML/Tasman/Links\n            /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i                                      // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9}).+(gecko)/i                                       // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows based\n            /microsoft\\s(windows)\\s(vista|xp)/i                                 // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows)\\snt\\s6\\.2;\\s(arm)/i,                                     // Windows RT\n            /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i,                   // Windows Phone\n            /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)/i\n            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [\n            /(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [\n\n            // Mobile/Embedded OS\n            /\\((bb)(10);/i                                                      // BlackBerry 10\n            ], [[NAME, 'BlackBerry'], VERSION], [\n            /(blackberry)\\w*\\/?([\\w\\.]*)/i,                                     // Blackberry\n            /(tizen)[\\/\\s]([\\w\\.]+)/i,                                          // Tizen\n            /(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|contiki)[\\/\\s-]?([\\w\\.]*)/i,\n                                                                                // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki\n            /linux;.+(sailfish);/i                                              // Sailfish OS\n            ], [NAME, VERSION], [\n            /(symbian\\s?os|symbos|s60(?=;))[\\/\\s-]?([\\w\\.]*)/i                  // Symbian\n            ], [[NAME, 'Symbian'], VERSION], [\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME], [\n            /mozilla.+\\(mobile;.+gecko.+firefox/i                               // Firefox OS\n            ], [[NAME, 'Firefox OS'], VERSION], [\n\n            // Console\n            /(nintendo|playstation)\\s([wids34portablevu]+)/i,                   // Nintendo/Playstation\n\n            // GNU/Linux based\n            /(mint)[\\/\\s\\(]?(\\w*)/i,                                            // Mint\n            /(mageia|vectorlinux)[;\\s]/i,                                       // Mageia/VectorLinux\n            /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\\/\\s-]?(?!chrom)([\\w\\.-]*)/i,\n                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus\n            /(hurd|linux)\\s?([\\w\\.]*)/i,                                        // Hurd/Linux\n            /(gnu)\\s?([\\w\\.]*)/i                                                // GNU\n            ], [NAME, VERSION], [\n\n            /(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i                                       // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Solaris\n            /(sunos)\\s?([\\w\\.\\d]*)/i                                            // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n\n            // BSD based\n            /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?([\\w\\.]*)/i                    // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n            ], [NAME, VERSION],[\n\n            /(haiku)\\s(\\w+)/i                                                   // Haiku\n            ], [NAME, VERSION],[\n\n            /cfnetwork\\/.+darwin/i,\n            /ip[honead]{2,4}(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i             // iOS\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n\n            /(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i,\n            /(macintosh|mac(?=_powerpc)\\s)/i                                    // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Other\n            /((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i,                             // Solaris\n            /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i,                                // AIX\n            /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms)/i,\n                                                                                // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS\n            /(unix)\\s?([\\w\\.]*)/i                                               // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n\n    /////////////////\n    // Constructor\n    ////////////////\n    /*\n    var Browser = function (name, version) {\n        this[NAME] = name;\n        this[VERSION] = version;\n    };\n    var CPU = function (arch) {\n        this[ARCHITECTURE] = arch;\n    };\n    var Device = function (vendor, model, type) {\n        this[VENDOR] = vendor;\n        this[MODEL] = model;\n        this[TYPE] = type;\n    };\n    var Engine = Browser;\n    var OS = Browser;\n    */\n    var UAParser = function (uastring, extensions) {\n\n        if (typeof uastring === 'object') {\n            extensions = uastring;\n            uastring = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(uastring, extensions).getResult();\n        }\n\n        var ua = uastring || ((window && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n        //var browser = new Browser();\n        //var cpu = new CPU();\n        //var device = new Device();\n        //var engine = new Engine();\n        //var os = new OS();\n\n        this.getBrowser = function () {\n            var browser = { name: undefined, version: undefined };\n            mapper.rgx.call(browser, ua, rgxmap.browser);\n            browser.major = util.major(browser.version); // deprecated\n            return browser;\n        };\n        this.getCPU = function () {\n            var cpu = { architecture: undefined };\n            mapper.rgx.call(cpu, ua, rgxmap.cpu);\n            return cpu;\n        };\n        this.getDevice = function () {\n            var device = { vendor: undefined, model: undefined, type: undefined };\n            mapper.rgx.call(device, ua, rgxmap.device);\n            return device;\n        };\n        this.getEngine = function () {\n            var engine = { name: undefined, version: undefined };\n            mapper.rgx.call(engine, ua, rgxmap.engine);\n            return engine;\n        };\n        this.getOS = function () {\n            var os = { name: undefined, version: undefined };\n            mapper.rgx.call(os, ua, rgxmap.os);\n            return os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return ua;\n        };\n        this.setUA = function (uastring) {\n            ua = uastring;\n            //browser = new Browser();\n            //cpu = new CPU();\n            //device = new Device();\n            //engine = new Engine();\n            //os = new OS();\n            return this;\n        };\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = {\n        NAME    : NAME,\n        MAJOR   : MAJOR, // deprecated\n        VERSION : VERSION\n    };\n    UAParser.CPU = {\n        ARCHITECTURE : ARCHITECTURE\n    };\n    UAParser.DEVICE = {\n        MODEL   : MODEL,\n        VENDOR  : VENDOR,\n        TYPE    : TYPE,\n        CONSOLE : CONSOLE,\n        MOBILE  : MOBILE,\n        SMARTTV : SMARTTV,\n        TABLET  : TABLET,\n        WEARABLE: WEARABLE,\n        EMBEDDED: EMBEDDED\n    };\n    UAParser.ENGINE = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n    UAParser.OS = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n    //UAParser.Utils = util;\n\n    ///////////\n    // Export\n    //////////\n\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        // TODO: test!!!!!!!!\n        /*\n        if (require && require.main === module && process) {\n            // cli\n            var jsonize = function (arr) {\n                var res = [];\n                for (var i in arr) {\n                    res.push(new UAParser(arr[i]).getResult());\n                }\n                process.stdout.write(JSON.stringify(res, null, 2) + '\\n');\n            };\n            if (process.stdin.isTTY) {\n                // via args\n                jsonize(process.argv.slice(2));\n            } else {\n                // via pipe\n                var str = '';\n                process.stdin.on('readable', function() {\n                    var read = process.stdin.read();\n                    if (read !== null) {\n                        str += read;\n                    }\n                });\n                process.stdin.on('end', function () {\n                    jsonize(str.replace(/\\n$/, '').split('\\n'));\n                });\n            }\n        }\n        */\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (\"function\" === FUNC_TYPE && __webpack_require__(83)) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (window) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = window && (window.jQuery || window.Zepto);\n    if (typeof $ !== UNDEF_TYPE) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (uastring) {\n            parser.setUA(uastring);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///82\n");

/***/ }),

/***/ 83:
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9hbWQtb3B0aW9ucy5qcz9jOGQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgX193ZWJwYWNrX2FtZF9vcHRpb25zX18gKi9cclxubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9hbWQtb3B0aW9ucy5qc1xuLy8gbW9kdWxlIGlkID0gODNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///83\n");

/***/ })

},[398]);
});